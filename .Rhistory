m1 <- linear_reg()
m1_recipe <- recipe(data=train, sleep_score ~ .) %>%
step_normalize(all_numeric_predictors()) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
step_YeoJohnson(all_numeric_predictors())
m1_wkfl <- workflow() %>%
add_model(m1) %>%
add_recipe(m1_recipe)
m1_fit <- m1_wkfl %>%
fit(data=train)
m1_aug <- m1_fit %>%
augment(test)
m1_aug %>%
metrics(truth = sleep_score, estimate = .pred)
m2 <- linear_reg()
m2_recipe <- recipe(data=train, sleep_score ~ stress_score + deep_sleep_min + date) %>%
step_normalize(all_numeric_predictors()) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
step_YeoJohnson(all_numeric_predictors())
m2_wkfl <- workflow() %>%
add_model(m2) %>%
add_recipe(m2_recipe)
m2_fit <- m2_wkfl %>%
fit(data=train)
m2_aug <- m2_fit %>%
augment(test)
m2_aug %>%
metrics(truth = sleep_score, estimate = .pred)
m2 <- linear_reg()
m2_wkfl <- workflow() %>%
add_model(m2) %>%
add_recipe(m1_recipe)
m2_fit <- m2_wkfl %>%
fit(data=train)
m2_aug <- m2_fit %>%
augment(test)
m2_aug %>%
metrics(truth = sleep_score, estimate = .pred)
m2 <- linear_reg()
m2_recipe <- recipe(data=train, sleep_score ~ stress_score + deep_sleep_min + date) %>%
step_normalize(all_numeric_predictors()) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
step_YeoJohnson(all_numeric_predictors())
m2_wkfl <- workflow() %>%
add_model(m2) %>%
add_recipe(m2_recipe)
m2_fit <- m2_wkfl %>%
fit(data=train)
m2_aug <- m2_fit %>%
augment(test)
m2_aug %>%
metrics(truth = sleep_score, estimate = .pred)
m3 <- boost_tree() %>%
set_engine('xgboost') %>%
set_mode('regression')
m2_recipe <- recipe(data=train, sleep_score ~ stress_score + deep_sleep_min + date) %>%
step_normalize(all_numeric_predictors()) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
step_YeoJohnson(all_numeric_predictors())
m3_workflow <- workflow() %>%
add_model(m3) %>%
add_recipe(m2_recipe)
m3_fit <- boost_workflow %>%
fit(data=train)
m3_aug <- boost_fit %>%
augment(test)
m3_aug %>%
metrics(truth = sleep_score, estimate = .pred)
m3 <- boost_tree() %>%
set_engine('xgboost') %>%
set_mode('regression')
m2_recipe <- recipe(data=train, sleep_score ~ .) %>%
step_normalize(all_numeric_predictors()) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
step_YeoJohnson(all_numeric_predictors())
m3_workflow <- workflow() %>%
add_model(m3) %>%
add_recipe(m2_recipe)
m3_fit <- boost_workflow %>%
fit(data=train)
m3_aug <- boost_fit %>%
augment(test)
m3_aug %>%
metrics(truth = sleep_score, estimate = .pred)
m3 <- rand_forest() %>%
set_engine('randomForest') %>%
set_mode('regression')
m2_recipe <- recipe(data=train, sleep_score ~ stress_score + deep_sleep_min + date) %>%
step_normalize(all_numeric_predictors()) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
step_YeoJohnson(all_numeric_predictors())
m3_workflow <- workflow() %>%
add_model(m3) %>%
add_recipe(m2_recipe)
m3_fit <- boost_workflow %>%
fit(data=train)
m3_aug <- boost_fit %>%
augment(test)
m3_aug %>%
metrics(truth = sleep_score, estimate = .pred)
m3 <- rand_forest() %>%
set_engine('randomForest') %>%
set_mode('regression')
m2_recipe <- recipe(data=train, sleep_score ~ stress_score + deep_sleep_min + date) %>%
step_normalize(all_numeric_predictors()) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
step_YeoJohnson(all_numeric_predictors())
m3_workflow <- workflow() %>%
add_model(m3) %>%
add_recipe(m2_recipe)
m3_fit <- m3_workflow %>%
fit(data=train)
m3_aug <- m3_fit %>%
augment(test)
m3_aug %>%
metrics(truth = sleep_score, estimate = .pred)
m3 <-
# Type
linear_reg(penalty = 1, mixture = 1) %>%
# Engine
set_engine('glmnet') %>%
# Mode
set_mode('regression')
m3_recipe <- recipe(data=train, sleep_score ~ stress_score + deep_sleep_min + date) %>%
step_normalize(all_numeric_predictors()) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
step_YeoJohnson(all_numeric_predictors())
m3_workflow <- workflow() %>%
add_model(m3) %>%
add_recipe(m3_recipe)
m3_fit <- m3_workflow %>%
fit(data=train)
# Compare R-squared values
cat("Initial Model R-squared:", summary(m1)$r.squared, "\n")
library(ggplot2)
ggplot(data=train, aes(x=stress_score)) + geom_histogram()
library(ggplot2)
ggplot(data=train, aes(x=stress_score)) + geom_histogram()
ggplot(data=train, aes(x=log(stress_score))) + geom_histogram()
library(ggplot2)
ggplot(data=train, aes(x=stress_score)) + geom_histogram()
ggplot(data=train, aes(x=boxcox(stress_score))) + geom_histogram()
library(ggplot2)
ggplot(data=train, aes(x=stress_score)) + geom_histogram()
ggplot(data=train, aes(x=log(stress_score))) + geom_histogram()
library(ggplot2)
ggplot(data=train, aes(x=stress_score)) + geom_histogram()
# log trans
ggplot(data=train, aes(x=log(stress_score))) + geom_histogram()
# binning
stress_bins <- cut(train$stress_score, breaks = 10)  # 3 bins
# View the result
print(stress_bins)
library(ggplot2)
ggplot(data=train, aes(x=stress_score)) + geom_histogram()
# log trans
ggplot(data=train, aes(x=log(stress_score))) + geom_histogram()
# binning
stress_bins <- cut(train$stress_score, breaks = 10)  # 10 bins
# Create a data frame with the binned variable
binned_data <- data.frame(stress_score = train$stress_score, stress_bins)
# Visualize the distribution with new bins using ggplot
ggplot(binned_data, aes(x = stress_bins)) +
geom_bar() +
labs(title = "Distribution with Binned Stress Scores", x = "Stress Score Bins", y = "Count")
library(ggplot2)
ggplot(data=train, aes(x=stress_score)) + geom_histogram()
# log trans <- NOT working well
ggplot(data=train, aes(x=log(stress_score))) + geom_histogram()
# binning <- work well!!
stress_bins <- cut(train$stress_score, breaks = 10)  # 10 bins
stress_binned <- data.frame(stress_score = train$stress_score, stress_bins)
ggplot(stress_binned, aes(x = stress_bins)) +
geom_bar() +
labs(title = "Distribution with Binned Stress Scores", x = "Stress Score Bins", y = "Count")
ggplot(data=train, aes(x=deep_sleep_min)) + geom_histogram()
ggplot(data=train, aes(x=deep_sleep_min)) + geom_histogram()
# log transformation
ggplot(data=train, aes(x=log(deep_sleep_min))) + geom_histogram()
ggplot(data=train, aes(x=deep_sleep_min)) + geom_histogram()
# log transformation <- worse
ggplot(data=train, aes(x=log(deep_sleep_min))) + geom_histogram()
# binning
deep_bins <- cut(train$deep_sleep_min, breaks - 10)
ggplot(data=train, aes(x=deep_sleep_min)) + geom_histogram()
# log transformation <- worse
ggplot(data=train, aes(x=log(deep_sleep_min))) + geom_histogram()
# binning
deep_bins <- cut(train$deep_sleep_min, breaks = 10)
deep_binned <- data.frame(deep_sleep_min = train$deep_sleep_min, deep_bins)
ggplot(deep_binned, aes(x = deep_bins)) +
geom_bar()+
labs(title = "Distribution with Binned Deep Sleep Minutes", x = "Deep Sleep Minutes Bins", y = "Count")
ggplot(data=train, aes(x=deep_sleep_min)) + geom_histogram()
# log transformation <- worse
ggplot(data=train, aes(x=log(deep_sleep_min))) + geom_histogram()
# binning
deep_bins <- cut(train$deep_sleep_min, breaks = 15)
deep_binned <- data.frame(deep_sleep_min = train$deep_sleep_min, deep_bins)
ggplot(deep_binned, aes(x = deep_bins)) +
geom_bar()+
labs(title = "Distribution with Binned Deep Sleep Minutes", x = "Deep Sleep Minutes Bins", y = "Count")
ggplot(data=train, aes(x=deep_sleep_min)) + geom_histogram()
# log transformation <- worse
ggplot(data=train, aes(x=log(deep_sleep_min))) + geom_histogram()
# binning
deep_bins <- cut(train$deep_sleep_min, breaks = 10)
deep_binned <- data.frame(deep_sleep_min = train$deep_sleep_min, deep_bins)
ggplot(deep_binned, aes(x = deep_bins)) +
geom_bar()+
labs(title = "Distribution with Binned Deep Sleep Minutes", x = "Deep Sleep Minutes Bins", y = "Count")
train$log_deep_bins <- log(as.numeric(train$deep_bins))
ggplot(data=train, aes(x=deep_sleep_min)) + geom_histogram()
# log transformation <- worse
ggplot(data=train, aes(x=log(deep_sleep_min))) + geom_histogram()
# binning
deep_bins <- cut(train$deep_sleep_min, breaks = 10)
deep_binned <- data.frame(deep_sleep_min = train$deep_sleep_min, deep_bins)
ggplot(deep_binned, aes(x = deep_bins)) +
geom_bar()+
labs(title = "Distribution with Binned Deep Sleep Minutes", x = "Deep Sleep Minutes Bins", y = "Count")
ggplot(data=train, aes(x=date)) + geom_histogram()
ggplot(data=train, aes(x=date_monthJul)) + geom_histogram()
m3 <- linear_reg()
m3_recipe <- recipe(data=train, sleep_score ~ stress_score + deep_sleep_min + date) %>%
step_normalize(all_numeric_predictors()) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
# step_YeoJohnson(all_numeric_predictors()) %>%
step_dummy(stress_bins)  %>% # Treat binned variable as a factor
step_dummy(deep_bins)
m3_wkfl <- workflow() %>%
add_model(m3) %>%
add_recipe(m3_recipe)
m3_fit <- m3_wkfl %>%
fit(data=train)
m3 <- linear_reg()
m3_recipe <- recipe(data = train, sleep_score ~ stress_score + deep_sleep_min + date) %>%
step_normalize(all_numeric_predictors()) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
step_dummy(stress_bins, one_hot = TRUE) %>%
step_dummy(deep_bins)
m3_wkfl <- workflow() %>%
add_model(m3) %>%
add_recipe(m3_recipe)
m3_fit <- m3_wkfl %>%
fit(data = train)
m3 <- linear_reg()
m3_recipe <- recipe(data = train, sleep_score ~ stress_score + deep_sleep_min + date) %>%
step_normalize(all_numeric_predictors()) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
step_dummy(as.factor(stress_bins), one_hot = TRUE) %>%
step_dummy(as.factor(deep_bins), one_hot = TRUE)
m3_wkfl <- workflow() %>%
add_model(m3) %>%
add_recipe(m3_recipe)
m3_fit <- m3_wkfl %>%
fit(data = train)
# Binning
train$stress_bins <- cut(train$stress_score, breaks = 10)  # 10 bins
# Convert to factors and set levels (if needed)
train$stress_bins <- as.factor(train$stress_bins)
# Set column names for step_dummy()
levels(train$stress_bins) <- paste0("bin_", levels(train$stress_bins))
m3_recipe <- recipe(data = train, sleep_score ~ stress_score + deep_sleep_min + date) %>%
step_normalize(all_numeric_predictors()) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
step_dummy(stress_bins, one_hot = TRUE) %>%
step_dummy(deep_bins)
m3_wkfl <- workflow() %>%
add_model(m3) %>%
add_recipe(m3_recipe)
m3_fit <- m3_wkfl %>%
fit(data = train)
# Binning
train$stress_bins <- cut(train$stress_score, breaks = 10)  # 10 bins
train$stress_bins <- as.factor(train$stress_bins)
levels(train$stress_bins) <- paste0("bin_", levels(train$stress_bins))
train$deep_bins <- cut(train$deep_sleep_min, breaks = 10)  # 10 bins
train$deep_bins <- as.factor(train$deep_bins)
levels(train$deep_bins) <- paste0("bin_", levels(train$deep_bins))
m3_recipe <- recipe(data = train, sleep_score ~ stress_score + deep_sleep_min + date) %>%
step_normalize(all_numeric_predictors()) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
step_dummy(stress_bins, one_hot = TRUE) %>%
step_dummy(deep_bins, one_hot = TRUE)
m3_wkfl <- workflow() %>%
add_model(m3) %>%
add_recipe(m3_recipe)
m3_fit <- m3_wkfl %>%
fit(data = train)
# Binning
train$stress_bins <- cut(train$stress_score, breaks = 10)  # 10 bins
train$stress_bins <- as.factor(train$stress_bins)
train$deep_bins <- cut(train$deep_sleep_min, breaks = 10)  # 10 bins
train$deep_bins <- as.factor(train$deep_bins)
m3_recipe <- recipe(data = train, sleep_score ~ stress_score + deep_sleep_min + date) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
step_normalize(all_numeric_predictors()) %>%
step_dummy(stress_bins, one_hot = TRUE) %>%
step_dummy(deep_bins, one_hot = TRUE)
m3_wkfl <- workflow() %>%
add_model(m3) %>%
add_recipe(m3_recipe)
m3_fit <- m3_wkfl %>%
fit(data = train)
# Binning
train$stress_bins <- cut(train$stress_score, breaks = 10)  # 10 bins
train$stress_bins <- as.factor(train$stress_bins)
train$deep_bins <- cut(train$deep_sleep_min, breaks = 10)  # 10 bins
train$deep_bins <- as.factor(train$deep_bins)
dummy_cols <- model.matrix(~ 0 + stress_bins, data = train)
colnames(dummy_cols) <- paste0("bin_", levels(train$stress_bins))
m3_recipe <- recipe(data = train, sleep_score ~ stress_score + deep_sleep_min + date) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
step_normalize(all_numeric_predictors()) %>%
step_dummy(stress_bins, one_hot = TRUE) %>%
step_dummy(deep_bins, one_hot = TRUE)
m3_wkfl <- workflow() %>%
add_model(m3) %>%
add_recipe(m3_recipe)
m3_fit <- m3_wkfl %>%
fit(data = train)
# Binning
m3_recipe <- recipe(data = train, sleep_score ~ stress_binned + date+deep_binned) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
step_normalize(all_numeric_predictors()) %>%
step_dummy(stress_bins, one_hot = TRUE) %>%
step_dummy(deep_bins, one_hot = TRUE)
# Binning
m3_recipe <- recipe(data = train, sleep_score ~ stress_bins + date+deep_bins) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
step_normalize(all_numeric_predictors()) %>%
step_dummy(stress_bins, one_hot = TRUE) %>%
step_dummy(deep_bins, one_hot = TRUE)
m3_wkfl <- workflow() %>%
add_model(m3) %>%
add_recipe(m3_recipe)
m3_fit <- m3_wkfl %>%
fit(data = train)
# Assuming 'test' is your test dataset
m3_aug <- m3_fit %>%
augment(test)
# Binning
m3_recipe <- recipe(data = train, sleep_score ~ stress_bins + date+deep_bins) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
step_zv(date_year, date_LaborDay, date_NewYearsDay, date_ChristmasDay) %>%
step_normalize(all_numeric_predictors()) %>%
step_dummy(stress_bins, one_hot = TRUE) %>%
step_dummy(deep_bins, one_hot = TRUE)
m3_wkfl <- workflow() %>%
add_model(m3) %>%
add_recipe(m3_recipe)
m3_fit <- m3_wkfl %>%
fit(data = train)
m3_aug <- m3_fit %>%
augment(test)
# Binning
m3_recipe <- recipe(data = train, sleep_score ~ stress_bins + date+deep_bins) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
#step_corr(all_numeric_predictors(), threshold = 0.5) %>%
step_zv(date_year, date_LaborDay, date_NewYearsDay, date_ChristmasDay) %>%
step_normalize(all_numeric_predictors()) %>%
step_dummy(stress_bins, one_hot = TRUE) %>%
step_dummy(deep_bins, one_hot = TRUE)
m3_wkfl <- workflow() %>%
add_model(m3) %>%
add_recipe(m3_recipe)
m3_fit <- m3_wkfl %>%
fit(data = train)
m3_aug <- m3_fit %>%
augment(test)
ggplot(data=train, aes(x=deep_sleep_min)) + geom_histogram()
# log transformation <- worse
ggplot(data=train, aes(x=log(deep_sleep_min))) + geom_histogram()
# binning
deep_bins <- cut(train$deep_sleep_min, breaks = 10)
deep_binned <- data.frame(deep_sleep_min = train$deep_sleep_min, deep_bins)
ggplot(deep_binned, aes(x = deep_bins)) +
geom_bar()+
labs(title = "Distribution with Binned Deep Sleep Minutes", x = "Deep Sleep Minutes Bins", y = "Count")
train %>% bind_cols(deep_binned)
ggplot(data=train, aes(x=deep_sleep_min)) + geom_histogram()
# log transformation <- worse
ggplot(data=train, aes(x=log(deep_sleep_min))) + geom_histogram()
# binning
deep_bins <- cut(train$deep_sleep_min, breaks = 10)
deep_binned <- data.frame(deep_sleep_min = train$deep_sleep_min, deep_bins)
ggplot(deep_binned, aes(x = deep_bins)) +
geom_bar()+
labs(title = "Distribution with Binned Deep Sleep Minutes", x = "Deep Sleep Minutes Bins", y = "Count")
train %>% bind_cols(deep_binned)
train %>% bind_cols(stress_binned)
# Binning
m3_recipe <- recipe(data = train, sleep_score ~ stress_bins + date+deep_bins) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
step_zv(date_year, date_LaborDay, date_NewYearsDay, date_ChristmasDay) %>%
step_normalize(all_numeric_predictors()) %>%
step_dummy(stress_bins, one_hot = TRUE) %>%
step_dummy(deep_bins, one_hot = TRUE)
m3_wkfl <- workflow() %>%
add_model(m3) %>%
add_recipe(m3_recipe)
m3_fit <- m3_wkfl %>%
fit(data = train)
m3_aug <- m3_fit %>%
augment(test)
# Binning
m3_recipe <- recipe(data = train, sleep_score ~ stress_bins + date+deep_bins) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
step_zv(date_year, date_LaborDay, date_NewYearsDay, date_ChristmasDay) %>%
step_normalize(all_numeric_predictors()) %>%
step_dummy(stress_bins, one_hot = TRUE) %>%
step_dummy(deep_bins, one_hot = TRUE)
m3_wkfl <- workflow() %>%
add_model(m3) %>%
add_recipe(m3_recipe)
m3_fit <- m3_wkfl %>%
fit(data = train)
m3_aug <- m3_fit %>%
augment(test)
# Assuming 'test' is your test dataset
str(test[, c('stress_bins', 'deep_bins')])
# Binning
m3_recipe <- recipe(data = train, sleep_score ~ stress_bins + date+deep_bins) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
step_normalize(all_numeric_predictors()) %>%
step_log(all_numeric_predictors())
m3_wkfl <- workflow() %>%
add_model(m3) %>%
add_recipe(m3_recipe)
m3_fit <- m3_wkfl %>%
fit(data = train)
m3 <- linear_reg()
m3_recipe <- recipe(data=train, sleep_score ~ stress_score + deep_sleep_min + date) %>%
step_normalize(all_numeric_predictors()) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
step_log(all_numeric_predictors())
m3_wkfl <- workflow() %>%
add_model(m3) %>%
add_recipe(m3_recipe)
m3_fit <- m3_wkfl %>%
fit(data=train)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(tidymodels)
library(car)
library(yardstick)
fitbit_df <- read.csv('fitbit_data.csv')
fitbit_df$date <- as.Date(fitbit_df$date)
head(fitbit_df)
set.seed(123)
split <- initial_split(fitbit_df, prop=0.9)
train <- training(split)
test <- testing(split)
m3 <- linear_reg()
m3_recipe <- recipe(data=train, sleep_score ~ stress_score + deep_sleep_min + date) %>%
step_normalize(all_numeric_predictors()) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
step_log(all_numeric_predictors())
m3_wkfl <- workflow() %>%
add_model(m3) %>%
add_recipe(m3_recipe)
m3_fit <- m3_wkfl %>%
fit(data=train)
