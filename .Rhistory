library(tidyverse)
library(dplyr)
library(ggplot2)
library(tidymodels)
library(car)
library(yardstick)
fitbit_df <- read.csv('fitbit_data.csv')
fitbit_df <- fitbit_df %>% select(-sleep_score)
fitbit_df$date <- as.Date(fitbit_df$date)
head(fitbit_df)
set.seed(123)
split <- initial_split(data=fitbit_df, prop=0.9)
train <- training(split)
test <- testing(split)
m0 <- lm(data=train, stress_score ~ .)
summary(m0)
plot(m0)
m0 <- lm(data=train, stress_score ~ .)
summary(m0)
par(mfrow=c(2,2))
plot(m0)
q <- quantile(train$sleep_score, c(0.25, 0.75))
iqr <- IQR(train$sleep_score)
threshold <- 1.5 * iqr
outliers <- which(train$sleep_score < (q[1] - threshold) | train$sleep_score > (q[2] + threshold))
print(outliers)
boxplot(train$sleep_score, main = "Boxplot of Sleep Score with Outliers",
ylab = "Sleep Score", col = "lightblue", pch = 19)
q <- quantile(train$stress_score, c(0.25, 0.75))
iqr <- IQR(train$stress_score)
threshold <- 1.5 * iqr
outliers <- which(train$sleep_score < (q[1] - threshold) | train$sleep_score > (q[2] + threshold))
print(outliers)
boxplot(train$stress_score, main = "Boxplot of Stress Score with Outliers",
ylab = "Stress Score", col = "lightblue", pch = 19)
points(outliers, train$stress_score[outliers], col = "red", pch = 19)
train <- train[-outliers]
train <- train[-outliers]
nrow(train)
set.seed(123)
split <- initial_split(data=fitbit_df, prop=0.9)
train <- training(split)
test <- testing(split)
nrow(train)
m1 <- linear_reg()
m1_recipe <- recipe(data=train, stress_score ~.) %>%
step_YeoJohnson(all_numeric_predictors()) %>%
step_normalize(all_numeric_predictors()) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5)
m1_wkfl <- workflow() %>%
add_recipe(m1_recipe) %>%
add_model(m1)
m1_fit <- m1_wkfl %>%
fit(data=train)
m1_aug <- m1_fit %>%
augment(test)
m1_aug %>%
metrics(truth = sleep_score, estimate = .pred)
m1 <- linear_reg()
m1_recipe <- recipe(data=train, stress_score ~.) %>%
step_YeoJohnson(all_numeric_predictors()) %>%
step_normalize(all_numeric_predictors()) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5)
m1_wkfl <- workflow() %>%
add_recipe(m1_recipe) %>%
add_model(m1)
m1_fit <- m1_wkfl %>%
fit(data=train)
m1_aug <- m1_fit %>%
augment(test)
m1_aug %>%
metrics(truth = stress_score, estimate = .pred)
m1 <- linear_reg()
m1_recipe <- recipe(data=train, stress_score ~.) %>%
step_YeoJohnson(all_numeric_predictors()) %>%
step_normalize(all_numeric_predictors()) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
update_role(train$date, new_role = "id")
fitbit_df <- read.csv('fitbit_data.csv')
fitbit_df <- fitbit_df %>% select(-sleep_score)
#fitbit_df$date <- as.Date(fitbit_df$date)
head(fitbit_df)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(tidymodels)
library(car)
library(yardstick)
fitbit_df <- read.csv('fitbit_data.csv')
fitbit_df <- fitbit_df %>% select(-sleep_score)
#fitbit_df$date <- as.Date(fitbit_df$date)
head(fitbit_df)
set.seed(123)
split <- initial_split(data=fitbit_df, prop=0.9)
train <- training(split)
test <- testing(split)
nrow(train)
m0 <- lm(data=train, stress_score ~ .)
summary(m0)
par(mfrow=c(2,2))
plot(m0)
q <- quantile(train$stress_score, c(0.25, 0.75))
iqr <- IQR(train$stress_score)
threshold <- 1.5 * iqr
outliers <- which(train$sleep_score < (q[1] - threshold) | train$sleep_score > (q[2] + threshold))
print(outliers)
boxplot(train$stress_score, main = "Boxplot of Stress Score with Outliers",
ylab = "Stress Score", col = "lightblue", pch = 19)
points(outliers, train$stress_score[outliers], col = "red", pch = 19)
train <- train[-outliers]
nrow(train)
m1 <- linear_reg()
m1_recipe <- recipe(data=train, stress_score ~.) %>%
step_YeoJohnson(all_numeric_predictors()) %>%
step_normalize(all_numeric_predictors()) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
update_role(train$date, new_role = "id")
fitbit_df <- read.csv('fitbit_data.csv')
fitbit_df <- fitbit_df %>% select(-c(sleep_score, date))
head(fitbit_df)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(tidymodels)
library(car)
library(yardstick)
fitbit_df <- read.csv('fitbit_data.csv')
fitbit_df <- fitbit_df %>% select(-c(sleep_score, date))
head(fitbit_df)
set.seed(123)
split <- initial_split(data=fitbit_df, prop=0.9)
train <- training(split)
test <- testing(split)
nrow(train)
m0 <- lm(data=train, stress_score ~ .)
summary(m0)
par(mfrow=c(2,2))
plot(m0)
q <- quantile(train$stress_score, c(0.25, 0.75))
iqr <- IQR(train$stress_score)
threshold <- 1.5 * iqr
outliers <- which(train$sleep_score < (q[1] - threshold) | train$sleep_score > (q[2] + threshold))
print(outliers)
boxplot(train$stress_score, main = "Boxplot of Stress Score with Outliers",
ylab = "Stress Score", col = "lightblue", pch = 19)
points(outliers, train$stress_score[outliers], col = "red", pch = 19)
train <- train[-outliers]
nrow(train)
m1 <- linear_reg()
m1_recipe <- recipe(data=train, stress_score ~.) %>%
step_YeoJohnson(all_numeric_predictors()) %>%
step_normalize(all_numeric_predictors()) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
update_role(train$date, new_role = "id")
q <- quantile(train$stress_score, c(0.25, 0.75))
iqr <- IQR(train$stress_score)
threshold <- 1.5 * iqr
outliers <- which(train$stress_score < (q[1] - threshold) | train$stress_score > (q[2] + threshold))
print(outliers)
boxplot(train$stress_score, main = "Boxplot of Stress Score with Outliers",
ylab = "Stress Score", col = "lightblue", pch = 19)
m0 <- lm(data=train, stress_score ~ .)
fitbit_df <- read.csv('fitbit_data.csv')
fitbit_df <- fitbit_df %>% select(-c(sleep_score, date))
head(fitbit_df)
set.seed(123)
split <- initial_split(data=fitbit_df, prop=0.9)
train <- training(split)
test <- testing(split)
nrow(train)
m0 <- lm(data=train, stress_score ~ .)
summary(m0)
par(mfrow=c(2,2))
plot(m0)
m1 <- linear_reg()
m1_recipe <- recipe(data=train, stress_score ~.) %>%
step_YeoJohnson(all_numeric_predictors()) %>%
step_normalize(all_numeric_predictors()) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
update_role(train$date, new_role = "id")
m11_recipe <- recipe(data=train, stress_score ~.) %>%
step_YeoJohnson(all_numeric_predictors()) %>%
step_normalize(all_numeric_predictors()) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5)
m1_wkfl <- workflow() %>%
add_recipe(m1_recipe) %>%
add_model(m1)
m1_fit <- m1_wkfl %>%
fit(data=train)
m1_aug <- m1_fit %>%
augment(test)
m1_aug %>%
metrics(truth = stress_score, estimate = .pred)
library(vip)
m1_fit %>%
extract_fit_parsnip() %>%
vip(aesthetics = list(fill = "#00B0B9"))
m2 <- linear_reg()
m2_recipe <- recipe(data=train, stress_score ~ resting_heart_rate+deep_sleep_min+o2_avg+nremhr+AZM_minutes) %>%
step_normalize(all_numeric_predictors()) %>%
step_YeoJohnson(all_numeric_predictors())
m2_wkfl <- workflow() %>%
add_model(m2) %>%
add_recipe(m2_recipe)
m2_fit <- m2_wkfl %>%
fit(data=train)
m2_aug <- m2_fit %>%
augment(test)
m2_aug %>%
metrics(truth = stress_score, estimate = .pred)
lasso_lm <-
# Type
linear_reg(penalty = 1, mixture = 1) %>%
# Engine
set_engine('glmnet') %>%
# Mode
set_mode('regression')
# Train a lasso regression model
lasso_workflow <- workflow() %>%
add_model(lasso_lm) %>%
add_recipe(m2_recipe)
lasso_fit <- lasso_workflow %>%
fit(data=train)
# Evaluate the model
lasso_aug <- reduced_fit %>%
augment(test)
lasso_lm <-
# Type
linear_reg(penalty = 1, mixture = 1) %>%
# Engine
set_engine('glmnet') %>%
# Mode
set_mode('regression')
# Train a lasso regression model
lasso_workflow <- workflow() %>%
add_model(lasso_lm) %>%
add_recipe(m2_recipe)
lasso_fit <- lasso_workflow %>%
fit(data=train)
# Evaluate the model
lasso_aug <- m2_fit %>%
augment(test)
reduced_aug %>%
metrics(truth = calories, estimate = .pred)
lasso_lm <-
# Type
linear_reg(penalty = 1, mixture = 1) %>%
# Engine
set_engine('glmnet') %>%
# Mode
set_mode('regression')
# Train a lasso regression model
lasso_workflow <- workflow() %>%
add_model(lasso_lm) %>%
add_recipe(m2_recipe)
lasso_fit <- lasso_workflow %>%
fit(data=train)
# Evaluate the model
lasso_aug <- m2_fit %>%
augment(test)
lasso_aug %>%
metrics(truth = stress_score, estimate = .pred)
# Build a random forest model specification
rf_lm <- rand_forest() %>%
set_engine('randomForest') %>%
set_mode('regression')
# Train a random forest model
rf_workflow <- workflow() %>%
add_model(rf_lm) %>%
add_recipe(m2_recipe)
rf_fit <- rf_workflow %>%
fit(data=train)
# Evaluate the model
rf_aug <- rf_fit %>%
augment(test)
rf_aug %>%
metrics(truth = stress_score, estimate = .pred)
boost_lm <- boost_tree() %>%
set_engine('xgboost') %>%
set_mode('regression')
boost_workflow <- workflow() %>%
add_model(m2) %>%
add_recipe(m2_recipe)
boost_fit <- boost_workflow %>%
fit(data=train)
boost_aug <- boost_fit %>%
augment(test)
boost_aug %>%
metrics(truth = stress_score, estimate = .pred)
m2 <- linear_reg()
m2_recipe <- recipe(data=train, stress_score ~ resting_heart_rate+deep_sleep_min+o2_avg+nremhr+AZM_minutes) %>%
step_normalize(all_numeric_predictors()) %>%
step_YeoJohnson(all_numeric_predictors()) %>%
step_corr(all_numeric_predictors(), threshold = 0.5)
m2_wkfl <- workflow() %>%
add_model(m2) %>%
add_recipe(m2_recipe)
m2_fit <- m2_wkfl %>%
fit(data=train)
m2_aug <- m2_fit %>%
augment(test)
m2_aug %>%
metrics(truth = stress_score, estimate = .pred)
lasso_lm <-
# Type
linear_reg(penalty = 1, mixture = 1) %>%
# Engine
set_engine('glmnet') %>%
# Mode
set_mode('regression')
# Train a lasso regression model
lasso_workflow <- workflow() %>%
add_model(lasso_lm) %>%
add_recipe(m2_recipe)
lasso_fit <- lasso_workflow %>%
fit(data=train)
# Evaluate the model
lasso_aug <- m2_fit %>%
augment(test)
lasso_aug %>%
metrics(truth = stress_score, estimate = .pred)
# Build a random forest model specification
rf_lm <- rand_forest() %>%
set_engine('randomForest') %>%
set_mode('regression')
# Train a random forest model
rf_workflow <- workflow() %>%
add_model(rf_lm) %>%
add_recipe(m2_recipe)
rf_fit <- rf_workflow %>%
fit(data=train)
# Evaluate the model
rf_aug <- rf_fit %>%
augment(test)
rf_aug %>%
metrics(truth = stress_score, estimate = .pred)
fitbit_df <- read.csv('fitbit_data.csv')
fitbit_df <- fitbit_df %>% select(-c(sleep_score))
head(fitbit_df)
fitbit_df <- read.csv('fitbit_data.csv')
fitbit_df <- fitbit_df %>% select(-c(sleep_score))
fitbit_df$date <- as.Date(fitbit_df$date)
head(fitbit_df)
fitbit_789 <- fitbit_df[month(fitbit_df$date) == c(7,8,9)]
month <- strftime(fitbit_df$date,"%m")
#fitbit_789 <- fitbit_df[month(fitbit_df$date) == c(7,8,9)]
print(month)
month <- strftime(fitbit_df$date,"%m")
fitbit_6789 <- fitbit_df[month == c("07","08","09")]
month <- strftime(fitbit_df$date,"%m")
fitbit_6789 <- fitbit_df[month == "07" | month == "08" | month == "09"]
ggplot(data=fitbit_df, aes(x=date, y=stress_score)) +
geom_line()
ggplot(data=fitbit_df, aes(x=date, y=stress_score)) +
geom_line()+
geom_bar()
ggplot(data=fitbit_df, aes(x=date, y=stress_score)) +
geom_histogram()+
geom_smooth()
ggplot(data=fitbit_df, aes(x=date, y=stress_score)) +
geom_histogram()
ggplot(data=fitbit_df, aes(x=date, y=stress_score)) +
geom_line()
m1 <- linear_reg()
m1_recipe <- recipe(data=train, stress_score ~.) %>%
step_YeoJohnson(all_numeric_predictors()) %>%
step_normalize(all_numeric_predictors()) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date)
m11_recipe <- recipe(data=train, stress_score ~.) %>%
step_YeoJohnson(all_numeric_predictors()) %>%
step_normalize(all_numeric_predictors()) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5)
m1_wkfl <- workflow() %>%
add_recipe(m1_recipe) %>%
add_model(m1)
m1_fit <- m1_wkfl %>%
fit(data=train)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(tidymodels)
library(car)
library(yardstick)
fitbit_df <- read.csv('fitbit_data.csv')
fitbit_df <- fitbit_df %>% select(-c(sleep_score))
fitbit_df$date <- as.Date(fitbit_df$date)
head(fitbit_df)
set.seed(123)
split <- initial_split(data=fitbit_df, prop=0.9)
train <- training(split)
test <- testing(split)
nrow(train)
m0 <- lm(data=train, stress_score ~ .)
summary(m0)
par(mfrow=c(2,2))
plot(m0)
m1 <- linear_reg()
m1_recipe <- recipe(data=train, stress_score ~.) %>%
step_YeoJohnson(all_numeric_predictors()) %>%
step_normalize(all_numeric_predictors()) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date)
m11_recipe <- recipe(data=train, stress_score ~.) %>%
step_YeoJohnson(all_numeric_predictors()) %>%
step_normalize(all_numeric_predictors()) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5)
m1_wkfl <- workflow() %>%
add_recipe(m1_recipe) %>%
add_model(m1)
m1_fit <- m1_wkfl %>%
fit(data=train)
m1_aug <- m1_fit %>%
augment(test)
m1_aug %>%
metrics(truth = stress_score, estimate = .pred)
library(vip)
m1_fit %>%
extract_fit_parsnip() %>%
vip(aesthetics = list(fill = "#00B0B9"))
m2 <- linear_reg()
m2_recipe <- recipe(data=train, stress_score ~ resting_heart_rate+deep_sleep_min+o2_avg+nremhr+AZM_minutes) %>%
step_normalize(all_numeric_predictors()) %>%
step_YeoJohnson(all_numeric_predictors()) %>%
step_corr(all_numeric_predictors(), threshold = 0.5)
m2_wkfl <- workflow() %>%
add_model(m2) %>%
add_recipe(m2_recipe)
m2_fit <- m2_wkfl %>%
fit(data=train)
m2_aug <- m2_fit %>%
augment(test)
m2_aug %>%
metrics(truth = stress_score, estimate = .pred)
ggplot(data=fitbit_df, aes(x=date, y=stress_score)) +
geom_line()
m1 <- linear_reg()
m1_recipe <- recipe(data=train, stress_score ~.) %>%
step_YeoJohnson(all_numeric_predictors()) %>%
step_normalize(all_numeric_predictors()) %>%
step_corr(all_numeric_predictors(), threshold = 0.5) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date)
m11_recipe <- recipe(data=train, stress_score ~.) %>%
step_YeoJohnson(all_numeric_predictors()) %>%
step_normalize(all_numeric_predictors()) %>%
step_date(date, features = c("dow", "month", "year")) %>%
step_holiday(date) %>%
step_corr(all_numeric_predictors(), threshold = 0.5)
m1_wkfl <- workflow() %>%
add_recipe(m1_recipe) %>%
add_model(m1)
m1_fit <- m1_wkfl %>%
fit(data=train)
m1_aug <- m1_fit %>%
augment(test)
m1_aug %>%
metrics(truth = stress_score, estimate = .pred)
m2 <- linear_reg()
m2_recipe <- recipe(data=train, stress_score ~ date+AZM_minutes+deep_sleep_min+o2_avg+nremhr) %>%
step_normalize(all_numeric_predictors()) %>%
step_YeoJohnson(all_numeric_predictors()) %>%
step_corr(all_numeric_predictors(), threshold = 0.5)
m2_wkfl <- workflow() %>%
add_model(m2) %>%
add_recipe(m2_recipe)
m2_fit <- m2_wkfl %>%
fit(data=train)
m2_aug <- m2_fit %>%
augment(test)
m2_aug %>%
metrics(truth = stress_score, estimate = .pred)
m2 <- linear_reg()
m2_recipe <- recipe(data=train, stress_score ~ date+AZM_minutes+deep_sleep_min+o2_avg+nremhr) %>%
step_normalize(all_numeric_predictors()) %>%
step_YeoJohnson(all_numeric_predictors()) %>%
step_corr(all_numeric_predictors(), threshold = 0.3)
m2_wkfl <- workflow() %>%
add_model(m2) %>%
add_recipe(m2_recipe)
m2_fit <- m2_wkfl %>%
fit(data=train)
m2_aug <- m2_fit %>%
augment(test)
m2_aug %>%
metrics(truth = stress_score, estimate = .pred)
m2 <- linear_reg()
m2_recipe <- recipe(data=train, stress_score ~ date+AZM_minutes+o2_avg) %>%
step_normalize(all_numeric_predictors()) %>%
step_YeoJohnson(all_numeric_predictors()) %>%
step_corr(all_numeric_predictors(), threshold = 0.3)
m2_wkfl <- workflow() %>%
add_model(m2) %>%
add_recipe(m2_recipe)
m2_fit <- m2_wkfl %>%
fit(data=train)
m2_aug <- m2_fit %>%
augment(test)
m2_aug %>%
metrics(truth = stress_score, estimate = .pred)
